//program to traverse the circular linked list
#include<bits/stdc++.h>
using namespace std;

class ListNode {
public:
    int data;
    ListNode* next;
    ListNode(int data) {
        this->data = data;
        this->next = NULL;
    }
};

ListNode* createList(int arr[], int n) {
    if (n == 0) return NULL;

    ListNode* head = new ListNode(arr[0]);
    ListNode* curr = head;

    for (int i = 1; i < n; i++) {
        ListNode* newnode = new ListNode(arr[i]);
        curr->next = newnode;
        curr = curr->next;
    }
    curr->next = head;
    return head;
}

void printList(ListNode* head) {
    if (head == NULL) return; 

    ListNode* curr = head;
    do {
        cout << curr->data << " ";
        curr = curr->next;
    } while (curr != head);
    cout << endl;
}

int main() {
    int n;
    cout << "Enter the size of the array:\n";
    cin >> n;
    int arr[n];
    cout << "Enter the elements in the array:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    ListNode* head = createList(arr, n);
    cout<<"circular linked list:\n";
    printList(head);

    return 0;
}
/* 
output:->

Enter the size of the array:
5
Enter the elements in the array:
1 2 3 4 5
circular linked list:
1 2 3 4 5 

Time complexity=O(n)
*/

