//program to remove linked list elements
#include<bits/stdc++.h>
using namespace std;
class ListNode{
  public:
   int data;
   ListNode* next;
   ListNode(int data){
       this->data=data;
       this->next=NULL;
   }
};
ListNode* createList(int arr[],int n){
    if(n==0) return NULL;
    ListNode* head=new ListNode(arr[0]);
    ListNode *curr=head;
    for(int i=1;i<n;i++){
        curr->next=new ListNode(arr[i]);
        curr=curr->next;
    }
    return head;
}
ListNode* removeval(ListNode* head,int val){
    ListNode* ans=new ListNode(0);
    ListNode* curr=ans;
    while(head!=NULL){
        if(head->data!=val){
            curr->next=head;
            curr=curr->next;
        }
        head=head->next;
    }
    curr->next=NULL;
    return ans->next;
}
void printList(ListNode* head){
    ListNode* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int main()
{
    int n,val;
    cout<<"Enter the size of the Linked List:\n";
    cin>>n;
     if (n == 0) {
        cout << "The linked list is empty." << endl;
        return 0;
    }
    int arr[n];
    cout<<"Enter elements in the Linked List:\n";
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    ListNode* head = createList(arr,n);
    cout<<"Enter the value you want to remove from List:\n";
    cin>>val;
    ListNode* result=removeval(head,val);
    cout<<"List after removal:\n";
    printList(result);
}
/*
output->

Enter the size of the Linked List:
7
Enter elements in the Linked List:
2 1 3 2 4 2 5
Enter the value you want to remove from List:
2
List after removal:
1 3 4 5 

Time complexity=O(n)
*/