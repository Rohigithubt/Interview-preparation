//program to find number of palindrome subsequence in a given string
#include<bits/stdc++.h>
using namespace std;
int dp[1001][1001];
     
int func(int i, int j, string &str){
        if (i > j) {
            return 0;
        }
        if (i == j) {
            return 1;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        if (str[i] == str[j]) {
            dp[i][j] = func(i + 1, j, str) + func(i, j - 1, str) + 1;
        } else {
            dp[i][j] = func(i + 1, j, str) + func(i, j - 1, str) - func(i + 1, j - 1, str);
        }
        return dp[i][j];
}

long long int countPS(string str){
        int n = str.length();
        memset(dp, -1, sizeof(dp));
        return func(0, n - 1, str);
}
int main()
{
    string str;
    cout<<"Enter the string:\n";
    getline(cin,str);
    cout<<"count of a palindrome subsequence="<<countPS(str);
}
/*

output:->

Enter the string:
aab
count of a palindrome subsequence=4

Time complexity=O(n^2)
*/