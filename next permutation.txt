//program to find next permutation
#include<bits/stdc++.h>
using namespace std;
void nextpermutation(vector<int> &nums){
    if(nums.size()==1){
        return;
    }
    int idx1;
    for(int i=nums.size()-2;i>=0;i--){
        if(nums[i]<nums[i+1]){
          idx1=i;
          break;
        }
    }
    if(idx1<0){
        reverse(nums.begin(),nums.end());
        return;
    }
    int idx2;
    for(int i=nums.size()-1;i>=0;i--){
        if(nums[i]>nums[idx1]){
            idx2=i;
            break;
        }
    }
    swap(nums[idx1],nums[idx2]);
    reverse(nums.begin()+idx1+1,nums.end());
}
int main()
{
    int n;
    vector<int> nums;
    cout<<"Enter the size of the vector:\n";
    cin>>n;
    cout<<"Enter the elements in the vector to find next permutaion of the number:\n";
    for(int i=0;i<n;i++){
        int value;
        cin>>value;
        nums.push_back(value);
    }
    nextpermutation(nums);
    cout<<"next permutation="
    for(int i=0;i<nums.size();i++){
        cout<<nums[i]<<" ";
    }
}

/*
output:->

Enter the size of the vector:
3
Enter the elements in the vector to find next permutaion of the number:
2 3 1
next permutation=3 1 2 

Time complexity=O(n)
*/