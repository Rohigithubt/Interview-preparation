//program to sort the array using merge sort
#include<bits/stdc++.h>
using namespace std;
void merge(int a[], int beg, int mid, int end)    
{    
    int i, j, k;  
    int n1 = mid - beg + 1;    
    int n2 = end - mid;    
      
    int LeftArray[n1], RightArray[n2];   
      
    for (int i = 0; i < n1; i++)    
    LeftArray[i] = a[beg + i];    
    for (int j = 0; j < n2; j++)    
    RightArray[j] = a[mid + 1 + j];    
      
    i = 0,   
    j = 0;    
    k = beg;  
      
    while (i < n1 && j < n2)    
    {    
        if(LeftArray[i] <= RightArray[j])    
        {    
            a[k] = LeftArray[i];    
            i++;    
        }    
        else    
        {    
            a[k] = RightArray[j];    
            j++;    
        }    
        k++;    
    }    
    while (i<n1)    
    {    
        a[k] = LeftArray[i];    
        i++;    
        k++;    
    }    
      
    while (j<n2)    
    {    
        a[k] = RightArray[j];    
        j++;    
        k++;    
    }    
}    
void mergeSort(int array[], int const begin, int const end)
{
    if (begin >= end)
        return;

    int mid = begin + (end - begin) / 2;
    mergeSort(array, begin, mid);
    mergeSort(array, mid + 1, end);
    merge(array, begin, mid, end);
}
int main()
{
    int n;
    cout<<"Enter the size of the array:\n";
    cin>>n;
    int arr[n];
    cout<<"Enter the elements in the array:\n";
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    cout << "Given array is \n";
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }

    mergeSort(arr, 0, n- 1);

    cout << "\nSorted array after merge operation is \n";
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}
/*
output:->

Enter the size of the array:
5
Enter the elements in the array:
2 1 3 5 4 
Given array is 
2 1 3 5 4 
Sorted array after merge operation is 
1 2 3 4 5 

Time complexity=O(N*logN)
space complexity=O(n)
*/