//program to find out if "s" can be segmented into a space-separated sequence of dictionary words
#include <bits/stdc++.h>
using namespace std;

int wordBreak(int n, string s, vector<string> &dictionary) {
    int l = s.length();
    vector<int> dp(l + 1, 0);
    dp[0] = 1;
    for (int i = 0; i <= l; i++) {
        for (string &word : dictionary) {
            int start = i - word.length();
            if (start >= 0 && dp[start] == 1 && s.substr(start, word.length()) == word) {
                dp[i] = 1;
                break;
            }
        }
    }
    return dp[l];
}

int main() {
    int n;
    cout << "Enter the size of the vector:\n";
    cin >> n;

    vector<string> v;
    cout << "Enter the strings in the vector:\n";
    for (int i = 0; i <=n; i++) {
        string s1;
        getline(cin, s1);
        v.push_back(s1);
    }

    string s;
    cout << "Enter the string to be matched:\n";
    cin >> s;

    cout << wordBreak(n, s, v) << endl;
    return 0;
}
/*

output:->

Enter the size of the vector:
6
Enter the strings in the vector:
i
like
sam
sung
samsung
mobile
Enter the string to be matched:
ilike
1

Time complexity=O(n^2)
*/