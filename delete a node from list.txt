//program to delete a node from a list 
#include <bits/stdc++.h>
using namespace std;
class ListNode {
public:
    int data;
    ListNode* next;
    ListNode(int data) {
        this->data = data;
        this->next = NULL;
    }
};
ListNode* createList(int arr[], int n) {
    if (n == 0) return NULL;

    ListNode* head = new ListNode(arr[0]);
    ListNode* curr = head;
    for (int i = 1; i < n; i++) {
        curr->next = new ListNode(arr[i]);
        curr = curr->next;
    }
    return head;
}

void deleteNode(ListNode*& head, int key) {
    if (head == NULL) {
        return;
    }
    ListNode* current = new ListNode(0);

   current->next= head;

    while (current != NULL && current->next != NULL ) {
        if (current->next->data == key) {
            current->next = current->next->next;
        } 
        else {
            current = current->next;
        }
    }
}

void printList(ListNode* head) {
    ListNode* temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

int main() {
    int n, k;
    cout << "Enter the size of the list:\n";
    cin >> n;
    int arr[n];
    cout << "Enter the elements in the list:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    cout << "Enter the position to delete:\n";
    cin >> k;

    ListNode* head = createList(arr, n);
    deleteNode(head, k);
    cout<<"After deletion:\n";
    printList(head);

    return 0;
}
/*

output:->

Enter the size of the list:
7
Enter the elements in the list:
1 2 3 4 5 6 7
Enter the position to delete:
7
After deletion:
1 2 3 4 5 6 

Time complexity=O(n)
*/
